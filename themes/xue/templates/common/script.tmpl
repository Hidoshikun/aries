{{ define "script" }}
    <script src="//cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/utils.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/modal.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/night-mode.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/moon-menu.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/gallery.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/post.js"></script>
    <script src="{{ .blogVars.ContextPath }}/static/js/header.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.0.0/build/highlight.min.js"></script>
    <script src="//cdn.jsdelivr.net/gh/xzzai/static@master/js/highlight.lang.js"></script>
    <script src="//cdn.jsdelivr.net/npm/highlightjs-line-numbers.js@2.7.0/dist/highlightjs-line-numbers.min.js"></script>
    <script data-pjax-viewer src="//cdn.jsdelivr.net/npm/viewerjs@1.5.0/dist/viewer.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/micromodal/dist/micromodal.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/justifiedGallery@3.7.0/dist/js/jquery.justifiedGallery.min.js"></script>
    <script src="//cdn.jsdelivr.net/gh/xzzai/static@master/js/simply-nav.js"></script>
    <script src="//cdn.jsdelivr.net/gh/xzzai/static@master/js/moon.js"></script>
    <script src="//cdn.jsdelivr.net/npm/social-share.js@1.0.16/dist/js/social-share.min.js"></script>
    <script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>
    <script src="//cdn.jsdelivr.net/gh/xzzai/static@master/js/jqcloud-1.0.4.min.js"></script>
    <script type='text/javascript'>
        let autoNightModeOpen = true;

        // 标签
        let tagArray = [
            {{ range $i, $tag := .tags }}
            {
                'text': '{{ $tag.Name }}',
                'weight': '{{ add $i 1 }}',
                'link': '{{ $.blogVars.ContextPath }}/tags/{{ $tag.Name }}'
            },
            {{ end }}
        ];

        // 分类
        let categoryArray = [
            {{ range $i, $category := .categories }}
            {
                'text': '{{ $category.Name }}',
                'weight': '{{ add $i 1 }}',
                'link': '{{ $.blogVars.ContextPath }}/categories/{{ $category.Url }}'
            },
            {{ end }}
        ];


        $(function () {
            let tagCloud = $("#tagCloud");
            if (tagCloud && tagCloud.children().length === 0) {
                tagCloud.jQCloud(tagArray, {autoResize: true, delayedMode: true});
            }

            let categoryCloud = $("#categoryCloud");
            if (categoryCloud && categoryCloud.children().length === 0) {
                categoryCloud.jQCloud(categoryArray, {autoResize: true, delayedMode: true});
            }
        });

        $('.arrow-down').on('click', function () {
            let postHeight = $('#homeHeader').height();
            window.scroll({top: postHeight - 50, behavior: 'smooth'});
        })

        // 禁用的分享站点, 现在已经不支持腾讯微博
        let socialDisabled = 'google,twitter,facebook';

        let katex_config = {
            delimiters:
                [
                    {left: "$$", right: "$$", display: true},
                    {left: "$", right: "$", display: false},
                    {left: "\\(", right: "\\)", display: false},
                    {left: "\\[", right: "\\]", display: true},
                ]
        };
        let openToc = false;
        openToc = true;
    </script>
    <script src="//cdn.jsdelivr.net/npm/tocbot@4.11.2/dist/tocbot.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script>
    <script defer src="//cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js"
            integrity="sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4"
            crossorigin="anonymous"></script>
    <script defer src="//cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js"
            integrity="sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa" crossorigin="anonymous"
            onload="if (document.getElementById('write'))
            { renderMathInElement(document.getElementById('write'), katex_config)}
            else if (document.getElementById('tree-hole'))
            {renderMathInElement(document.getElementById('tree-hole'), katex_config)}"></script>
    <script src="//cdn.jsdelivr.net/npm/pjax@0.2.8/pjax.js"></script>
    <script src="//cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.min.js"></script>
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.min.css">
    <script type="text/javascript">
        let pjax = new Pjax({
            elements: 'a[href]:not([href^="#"]):not([data-not-pjax]):not([target^="_blank"]), form', // default is "a[href], form[action]"
            cacheBust: false,
            debug: false,
            selectors: [
                'title',
                '#container'
            ]
        });

        //在Pjax请求开始后触发
        document.addEventListener('pjax:send', function () {
            NProgress.start();

        });

        //在Pjax请求完成后触发
        document.addEventListener('pjax:complete', function (e) {
            NProgress.done();
            // 最开始就要隐藏
            header.hideSubMenu();
            // header
            // header.hoverSubMenu();

            // 加载相册
            if ($("#container").find('.photos-page').length > 0) {
                photo.loadGallery();
                photo.showPhotos();
            }

            // 隐藏 search box 并清空 input
            $('#searchBox').addClass('hidden');
            $("#searchBoxInput").val("");

            // 标签云
            let tagCloud = $("#tagCloud");
            if (tagCloud && tagCloud.children().length === 0) {
                tagCloud.jQCloud(tagArray, {autoResize: true, delayedMode: true});
            }

            // 分类云
            let categoryCloud = $("#categoryCloud");
            if (categoryCloud && categoryCloud.children().length === 0) {
                categoryCloud.jQCloud(categoryArray, {autoResize: true, delayedMode: true});
            }

            // 当前菜单菜单高亮
            hanUtils.highlightMenu();

            //重载
            if (typeof _hmt !== 'undefined') {
                // support 百度统计
                _hmt.push(['_trackPageview', location.pathname + location.search]);
            }
            if (typeof ga !== 'undefined') {
                // support google analytics
                ga('send', 'pageview', location.pathname + location.search);
            }

            // 重新加载 评论
            $('script[data-pjax-comment]').each(function () {
                let commentParent = $(this).parent()
                let comment = $(this).remove();
                commentParent.append(comment);
            });

            $('.icon-toc').each(function () {
                $(this).remove();
            });

            $('#moonToc').removeClass('mm-active');

            if ($("#container").find('.article-content').length > 0) {

                // 转换post内容为 Markdown
                // post.formatContent();

                // 小屏幕目录
                $('#moonMenu').append('<span class="moon-menu-item pl-6 cst-icon icon-toc"></span>')

                moonMenu.initMoonToc();

                moonMenu.ckShowContent();

                // 代码高亮
                post.loadHighlight();

                // 图片预览
                post.initViewer();

                if (openToc) {
                    // 目录事件
                    post.scrollTocFixed();

                    // 初始化toc
                    post.initToc()

                    // 删除文章最开始第一个 <ul>(如果有)
                    post.removeFirstUL()
                }

                // 分享按钮
                post.shareIcon()

                // 模态框
                coffeeModal.toggleCoffeeModal();

                // 初始展示二维码
                coffeeModal.initShowCode();

                // 切换支付二维码
                coffeeModal.switchQrCode();

                try {
                    if (renderMathInElement && typeof renderMathInElement !== 'undefined') {
                        renderMathInElement(document.getElementById('write'), katex_config);
                    }

                    // if (mermaid && typeof mermaid !== 'undefined') {
                    //     mermaid.initialize();
                    // }
                } catch (e) {
                    console.log("error");
                }
            }

            // table 要加上 div 避免出现小屏幕下展示不全
            hanUtils.tableAddNode();

            // li 添加 span
            hanUtils.liAddSpan();

            // 自定义页面 viewer
            hanUtils.sheetViewer();

            // 相册页面 viewer
            hanUtils.journalViewer();


            if (renderMathInElement && typeof renderMathInElement !== 'undefined') {
                if (document.getElementById('write')) {
                    renderMathInElement(document.getElementById('write'), katex_config)
                } else if (document.getElementById('tree-hole')) {
                    renderMathInElement(document.getElementById('tree-hole'), katex_config)
                }
            }

        });

        document.addEventListener('pjax:end', function () {
        });

        //Pjax请求失败后触发，请求对象将作为一起传递event.options.request
        document.addEventListener('pjax:error', function () {
            NProgress.done();
            bar('系统出现问题，请手动刷新一次', '3000');
        });

        // 建站时间统计
        function show_date_time() {
            if ($("#span_dt_dt").length > 0) {
                window.setTimeout("show_date_time()", 1000);
                BirthDay = new Date("08/01/2019 00:00:00");
                today = new Date();
                timeold = (today.getTime() - BirthDay.getTime());
                sectimeold = timeold / 1000;
                secondsold = Math.floor(sectimeold);
                msPerDay = 24 * 60 * 60 * 1000;
                e_daysold = timeold / msPerDay;
                daysold = Math.floor(e_daysold);
                e_hrsold = (e_daysold - daysold) * 24;
                hrsold = Math.floor(e_hrsold);
                e_minsold = (e_hrsold - hrsold) * 60;
                minsold = Math.floor((e_hrsold - hrsold) * 60);
                seconds = Math.floor((e_minsold - minsold) * 60);
                span_dt_dt.innerHTML = daysold + "天" + hrsold + "小时" + minsold + "分" + seconds + "秒";
            }
        }

        show_date_time();

        // console.clear();
        console.log("%c 有朋自远方来, 不亦说乎.", "background:#24272A; color:#ffffff", "");
        console.log("%c Github %c", "background:#24272A; color:#ffffff", "", "https://github.com/zhaoyangkun");
    </script>
{{ end }}